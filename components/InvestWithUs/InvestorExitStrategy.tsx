"use client";
import React, { useState, useEffect } from "react";
import { useInView } from "react-intersection-observer";
import { motion } from "framer-motion";

interface OptionDetails {
  subheading: string;
  content: string;
}

interface ExitOption {
  title: string;
  details: OptionDetails[];
}

const exitOptions: ExitOption[] = [
  {
    title: "Secondary Market Access",
    details: [
      {
        subheading: "Secondary Market Listing",
        content:
          "Investments will be structured to allow for trading on secondary markets where feasible, providing liquidity through buying and selling shares or interests in the SPV.",
      },
      {
        subheading: "Facilitated Transactions",
        content:
          "Epiidosis Investments will assist in matching buyers and sellers within its investor network to facilitate secondary market transactions.",
      },
    ],
  },
  {
    title: "Dividend Distribution",
    details: [
      {
        subheading: "Periodic Dividends",
        content:
          "Where applicable, periodic dividends will be distributed from the income generated by the investments, providing regular returns and an additional exit mechanism.",
      },
      {
        subheading: "Final Payouts",
        content:
          "Upon liquidation of the SPV or at the end of the investment term, remaining profits will be distributed to investors as final payouts.",
      },
    ],
  },
  {
    title: "Buyout Clauses",
    details: [
      {
        subheading: "Management Buyout Option",
        content:
          "Epiidosis may offer a buyout option, allowing the firm to repurchase investor stakes at a predetermined price or valuation.",
      },
      {
        subheading: "Third-Party Buyouts",
        content:
          "Potential buyouts by third parties, including strategic investors or other funds, will be explored to provide exit opportunities.",
      },
    ],
  },
  {
    title: "Clear Communication and Support",
    details: [
      {
        subheading: "Regular Updates",
        content:
          "Investors will receive regular updates on the performance of their investments and the status of exit options.",
      },
      {
        subheading: "Dedicated Support Team",
        content:
          "A dedicated investor relations team will be available to assist with exit processes and address any concerns.",
      },
    ],
  },
  {
    title: "Pre-defined Exit Options",
    details: [
      {
        subheading: "Scheduled Liquidity Events",
        content:
          "Investors will have predefined opportunities to exit their investment at certain milestones, such as project completion, property sales, or at the end of a specified investment period.",
      },
      {
        subheading: "Redemption Windows",
        content:
          "Periodic redemption windows will be established where investors can choose to withdraw their capital, typically on an annual basis (1-year Lock In).",
      },
    ],
  },
];

const InvestorExitStrategy: React.FC = () => {
  const [remainingOptions, setRemainingOptions] = useState<ExitOption[]>(exitOptions);
  const [selectedOption, setSelectedOption] = useState<ExitOption | null>(null);

  const [expandedOptions, setExpandedOptions] = useState<string[]>([]);

  useEffect(() => {
    // Set the selected option to the last item initially
    setSelectedOption(exitOptions[exitOptions.length - 1]);
  }, []);

  const moveOptionToEnd = (option: ExitOption) => {
    const reorderedOptions = remainingOptions.filter((opt) => opt.title !== option.title);
    reorderedOptions.push(option);
    return reorderedOptions;
  };

  const handleSelectOption = (option: ExitOption) => {
    const reorderedOptions = moveOptionToEnd(option);
    setRemainingOptions(reorderedOptions);
    setSelectedOption(selectedOption?.title === option.title ? null : option);
  };

  const handleToggleExpand = (title: string) => {
    setExpandedOptions(prev =>
      prev.includes(title) ? prev.filter(t => t !== title) : [...prev, title]
    );
  };

  const displayedOptions = remainingOptions.slice(0, 4);

  const { ref, inView } = useInView({
    triggerOnce: true,
    threshold: 0.2, // Trigger the animation when 20% of the section is in view
  });
  return (
    <>
    <section className="bg-white mt-2" style={{ fontFamily: "Lato, sans-serif" }}>
      <div ref={ref} className="container mx-auto px-6 md:px-12">
        {/* Header */}
        <motion.div
            initial={{ opacity: 0, y: 50 }} // Start with content below and hidden
            animate={inView ? { opacity: 1, y: 0 } : {}} // Animate to visible and at the right position
            transition={{ duration: 0.8 }} // Animation duration
          >
        <div className="text-center mb-8">
          <h2 className="textgold md:text-4xl text-3xl mb-4" style={{ fontFamily: "Montserrat, sans-serif" }}>
            Key Elements of our Investor Exit Strategy
          </h2>
          <p className="text-gray-700 md:mx-52">
            Our goal at Epiidosis Investments is to provide investors with optimal returns and seamless exits.
            With a well-structured exit strategy, we aim to maximize value and provide clarity.
          </p>
        </div>

        {/* Desktop View */}
        <div className="hidden md:grid grid-cols-1 md:grid-cols-2 gap-8">
          {/* Left Side: List of Exit Strategies */}
          <div className="bg-white p-6">
            {displayedOptions.map((option, index) => (
              <button
                key={index}
                className={`w-full text-left py-8 px-6 mb-4 text-xl font-medium bg-white rounded-lg shadow-lg shadow-slate-50 transition-colors duration-300 hover:bg-gray-100 ${
                  selectedOption?.title === option.title ? "bg-gray-100" : ""
                }`}
                style={{ fontFamily: "Montserrat, sans-serif" }}
                onClick={() => handleSelectOption(option)}
              >
                {option.title}{" "}
                <span className="float-right">
                  <img src="/invest/arrow.png" alt="" />
                </span>
              </button>
            ))}
          </div>

          {/* Right Side: Details of the Selected Exit Strategy */}
          {selectedOption && (
            <div className="bg-black text-white rounded-lg shadow-lg p-6 pr-16 mt-6 max-h-[420px] overflow-auto text-justify tracking-normal">
              <h3 className="text-2xl font-bold mb-8">{selectedOption.title}</h3>
              <ul className="list-disc pl-5 mb-8">
                {selectedOption.details.map((detail, index) => (
                  <li key={index} className="mb-4">
                    <strong>{detail.subheading}:</strong>
                    <p className="text-sm mt-1 text-[#c4bfc2]">{detail.content}</p>
                  </li>
                ))}
              </ul>
            </div>
          )}
        </div>

        {/* Section for Mobile View */}
        <div className="md:hidden">
          {exitOptions.map((option, index) => (
            <div key={index} className="mb-4">
              <button
                className={`w-full text-left py-8 px-6 text-xl font-medium bg-white rounded-lg shadow-lg shadow-slate-50 transition-colors duration-300 hover:bg-gray-100 ${
                  expandedOptions.includes(option.title) ? "bg-gray-100" : ""
                }`}
                style={{ fontFamily: "Montserrat, sans-serif" }}
                onClick={() => handleToggleExpand(option.title)}
              >
                {option.title}{" "}
                <span className="float-right">
                  <img src="/invest/arrow.png" alt="" />
                </span>
              </button>
              {expandedOptions.includes(option.title) && (
                <div className="bg-black text-white rounded-lg shadow-lg p-6 mt-2 max-h-[420px] overflow-auto text-justify tracking-normal">
                  <h3 className="text-2xl font-bold mb-8">{option.title}</h3>
                  <ul className="list-disc pl-5 mb-8">
                    {option.details.map((detail, index) => (
                      <li key={index} className="mb-4">
                        <strong>{detail.subheading}:</strong>
                        <p className="text-sm mt-1 text-[#c4bfc2]">{detail.content}</p>
                      </li>
                    ))}
                  </ul>
                </div>
              )}
            </div>
          ))}
        </div>
        {/* Get in Touch Button */}
        <div className="text-center mt-8"style={{
      fontFamily: "Montserrat, sans-serif",
    }}>
          <button className="bg-[#CB8511] text-white py-2 px-6 font-bold rounded-sm hover:bg-[#1A9548]">
                <a href="/Invest-with-us/contact-us">Get in touch</a>
          </button>
        </div>
        </motion.div>
      </div>
      
    </section>
    </>
  );
};

export default InvestorExitStrategy;
